{"ast":null,"code":"var _jsxFileName = \"/Users/nassim/Desktop/projectbooking/client/src/components/forms/CreateHotelForm.js\";\nimport React from 'react';\nimport { Container, Grid, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport NumberFormat from 'react-number-format';\nimport AlgoliaPlaces from 'algolia-places-react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'; //\n//\n\nconst config = {\n  appId: process.env.ALGOLIA_APP_ID,\n  apiKey: process.env.ALGOLIA_API_KEY,\n  language: 'en',\n  countries: ['tn']\n};\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    isNumericString: true,\n    prefix: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n}\n\n_c = NumberFormatCustom;\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}; // @ts-ignore ///\n\nexport default function HotelCreateForm(props) {\n  const {\n    handleChange,\n    handleImageChange,\n    setLocation,\n    setValues,\n    values\n  } = props;\n  const {\n    title,\n    content,\n    price,\n    bed,\n    from,\n    to\n  } = values;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Title\",\n    name: \"title\",\n    onChange: handleChange,\n    inputProps: {\n      maxLength: 45\n    },\n    required: true,\n    value: title,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"file\",\n    accept: \"image/*\",\n    name: \"image\",\n    onChange: handleImageChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Content\",\n    name: \"content\",\n    value: content,\n    onChange: handleChange,\n    multiline: true,\n    rows: 5,\n    variant: \"outlined\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(AlgoliaPlaces, {\n    placeholder: Location,\n    defaultValue: Location,\n    options: config,\n    onChange: ({\n      suggestion\n    }) => setLocation(suggestion.value),\n    style: {\n      height: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Price\",\n    value: price,\n    onChange: handleChange,\n    name: \"price\",\n    id: \"formatted-numberformat-input\",\n    variant: \"outlined\",\n    required: true,\n    InputProps: {\n      inputComponent: NumberFormatCustom\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Bed\",\n    name: \"bed\",\n    type: \"number\",\n    onChange: handleChange,\n    required: true,\n    value: bed,\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: 4\n      }\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    helperText: \"From date\",\n    minDate: new Date(),\n    value: from,\n    onChange: date => setValues({ ...values,\n      from: date\n    }),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    helperText: \"To date\",\n    minDate: new Date(),\n    value: to,\n    onChange: date => setValues({ ...values,\n      to: date\n    }),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }))))));\n}\n_c2 = HotelCreateForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NumberFormatCustom\");\n$RefreshReg$(_c2, \"HotelCreateForm\");","map":{"version":3,"sources":["/Users/nassim/Desktop/projectbooking/client/src/components/forms/CreateHotelForm.js"],"names":["React","Container","Grid","TextField","PropTypes","NumberFormat","AlgoliaPlaces","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","config","appId","process","env","ALGOLIA_APP_ID","apiKey","ALGOLIA_API_KEY","language","countries","NumberFormatCustom","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","string","HotelCreateForm","handleChange","handleImageChange","setLocation","setValues","title","content","price","bed","from","to","maxLength","Location","suggestion","height","inputComponent","inputProps","min","max","Date","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,QAA2C,mBAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACEC,uBADF,EAEEC,kBAFF,QAGO,sBAHP,C,CAKA;AACA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,cADN;AAEbC,EAAAA,MAAM,EAAEH,OAAO,CAACC,GAAR,CAAYG,eAFP;AAGbC,EAAAA,QAAQ,EAAE,IAHG;AAIbC,EAAAA,SAAS,EAAE,CAAC,IAAD;AAJE,CAAf;;AAOA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsB,OAAGC;AAAzB,MAAmCH,KAAzC;AAEA,sBACE,oBAAC,YAAD,oBACMG,KADN;AAEE,IAAA,WAAW,EAAEF,QAFf;AAGE,IAAA,aAAa,EAAGG,MAAD,IAAY;AACzBF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAEN,KAAK,CAACM,IADN;AAENC,UAAAA,KAAK,EAAEH,MAAM,CAACG;AAFR;AADD,OAAD,CAAR;AAMD,KAVH;AAWE,IAAA,iBAAiB,MAXnB;AAYE,IAAA,eAAe,MAZjB;AAaE,IAAA,MAAM,EAAC,GAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD;;KApBQR,kB;AAsBTA,kBAAkB,CAACS,SAAnB,GAA+B;AAC7BP,EAAAA,QAAQ,EAAEjB,SAAS,CAACyB,IAAV,CAAeC,UADI;AAE7BJ,EAAAA,IAAI,EAAEtB,SAAS,CAAC2B,MAAV,CAAiBD,UAFM;AAG7BR,EAAAA,QAAQ,EAAElB,SAAS,CAACyB,IAAV,CAAeC;AAHI,CAA/B,C,CAMA;;AACA,eAAe,SAASE,eAAT,CAAyBZ,KAAzB,EAAgC;AAC7C,QAAM;AAAEa,IAAAA,YAAF;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA,WAAnC;AAAgDC,IAAAA,SAAhD;AAA2DZ,IAAAA;AAA3D,MACJJ,KADF;AAEA,QAAM;AAAEiB,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,GAAzB;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA;AAApC,MAA2ClB,MAAjD;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAES,YAHZ;AAIE,IAAA,UAAU,EAAE;AAAEU,MAAAA,SAAS,EAAE;AAAb,KAJd;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAEN,KANT;AAOE,IAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAaE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAEH,iBALZ;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,eAuBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAEI,OAHT;AAIE,IAAA,QAAQ,EAAEL,YAJZ;AAKE,IAAA,SAAS,MALX;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,OAAO,EAAC,UAPV;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvBF,eAmCE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAEW,QADf;AAEE,IAAA,YAAY,EAAEA,QAFhB;AAGE,IAAA,OAAO,EAAElC,MAHX;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEmC,MAAAA;AAAF,KAAD,KAAoBV,WAAW,CAACU,UAAU,CAAClB,KAAZ,CAJ3C;AAKE,IAAA,KAAK,EAAE;AAAEmB,MAAAA,MAAM,EAAE;AAAV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,eA0CE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAEP,KAFT;AAGE,IAAA,QAAQ,EAAEN,YAHZ;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,EAAE,EAAC,8BALL;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,QAAQ,MAPV;AAQE,IAAA,UAAU,EAAE;AACVc,MAAAA,cAAc,EAAE5B;AADN,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1CF,eAwDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,QAAQ,EAAEc,YAJZ;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAEO,GANT;AAOE,IAAA,UAAU,EAAE;AAAEQ,MAAAA,UAAU,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf;AAAd,KAPd;AAQE,IAAA,OAAO,EAAC,UARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxDF,eAoEE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAE3C,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,cAAc,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,MAAM,EAAC,YAHT;AAIE,IAAA,MAAM,EAAC,QAJT;AAKE,IAAA,EAAE,EAAC,oBALL;AAME,IAAA,UAAU,EAAC,WANb;AAOE,IAAA,OAAO,EAAE,IAAI4C,IAAJ,EAPX;AAQE,IAAA,KAAK,EAAEV,IART;AASE,IAAA,QAAQ,EAAGW,IAAD,IAAUhB,SAAS,CAAC,EAAE,GAAGZ,MAAL;AAAaiB,MAAAA,IAAI,EAAEW;AAAnB,KAAD,CAT/B;AAUE,IAAA,mBAAmB,EAAE;AACnB,oBAAc;AADK,KAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CApEF,CADF,eAyFE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAE7C,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,cAAc,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,MAAM,EAAC,YAHT;AAIE,IAAA,MAAM,EAAC,QAJT;AAKE,IAAA,EAAE,EAAC,oBALL;AAME,IAAA,UAAU,EAAC,SANb;AAOE,IAAA,OAAO,EAAE,IAAI4C,IAAJ,EAPX;AAQE,IAAA,KAAK,EAAET,EART;AASE,IAAA,QAAQ,EAAGU,IAAD,IAAUhB,SAAS,CAAC,EAAE,GAAGZ,MAAL;AAAakB,MAAAA,EAAE,EAAEU;AAAjB,KAAD,CAT/B;AAUE,IAAA,mBAAmB,EAAE;AACnB,oBAAc;AADK,KAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAzFF,CAFF,CADF,CADF;AAmHD;MAvHuBpB,e","sourcesContent":["import React from 'react';\nimport { Container, Grid, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport NumberFormat from 'react-number-format';\nimport AlgoliaPlaces from 'algolia-places-react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n//\n//\nconst config = {\n  appId: process.env.ALGOLIA_APP_ID,\n  apiKey: process.env.ALGOLIA_API_KEY,\n  language: 'en',\n  countries: ['tn'],\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n// @ts-ignore ///\nexport default function HotelCreateForm(props) {\n  const { handleChange, handleImageChange, setLocation, setValues, values } =\n    props;\n  const { title, content, price, bed, from, to } = values;\n  return (\n    <div>\n      <div>\n        <br />\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={2}>\n            <Grid item md={6} xs={12} lg={4}>\n              <TextField\n                label=\"Title\"\n                name=\"title\"\n                onChange={handleChange}\n                inputProps={{ maxLength: 45 }}\n                required\n                value={title}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid item md={6} xs={12} lg={4}>\n              <input\n                className=\"form-control\"\n                type=\"file\"\n                accept=\"image/*\"\n                name=\"image\"\n                onChange={handleImageChange}\n                required\n              />\n            </Grid>\n            <Grid item md={6} xs={12} lg={4}>\n              <TextField\n                label=\"Content\"\n                name=\"content\"\n                value={content}\n                onChange={handleChange}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                required\n              />\n            </Grid>\n            <AlgoliaPlaces\n              placeholder={Location}\n              defaultValue={Location}\n              options={config}\n              onChange={({ suggestion }) => setLocation(suggestion.value)}\n              style={{ height: '50px' }}\n            />\n            <Grid item md={6} xs={12} lg={4}>\n              <TextField\n                label=\"Price\"\n                value={price}\n                onChange={handleChange}\n                name=\"price\"\n                id=\"formatted-numberformat-input\"\n                variant=\"outlined\"\n                required\n                InputProps={{\n                  inputComponent: NumberFormatCustom,\n                }}\n              />\n            </Grid>\n            <Grid item md={6} xs={12} lg={4}>\n              <TextField\n                label=\"Bed\"\n                name=\"bed\"\n                type=\"number\"\n                onChange={handleChange}\n                required\n                value={bed}\n                InputProps={{ inputProps: { min: 0, max: 4 } }}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justifyContent=\"space-around\">\n                <KeyboardDatePicker\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  margin=\"normal\"\n                  id=\"date-picker-inline\"\n                  helperText=\"From date\"\n                  minDate={new Date()}\n                  value={from}\n                  onChange={(date) => setValues({ ...values, from: date })}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </Grid>\n\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justifyContent=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                helperText=\"To date\"\n                minDate={new Date()}\n                value={to}\n                onChange={(date) => setValues({ ...values, to: date })}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </Container>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}