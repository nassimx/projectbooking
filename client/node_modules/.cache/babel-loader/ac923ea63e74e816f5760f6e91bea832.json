{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\booking2\\\\client\\\\src\\\\components\\\\hotels\\\\HotelsList.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardActions, CardContent, Grid, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport AddHotel from './addhotel';\nimport HotelCard from './HotelCard';\nimport './style.css';\nimport { deleteHotel, sellerHotels } from '../../redux/actions/hotel';\nimport { useSelector } from 'react-redux';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport { createConnectAccount } from '../actions/stripe';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HotelsList = ({\n  params\n}) => {\n  _s();\n\n  //\n  // @ts-ignore\n  const {\n    auth\n  } = useSelector(state => ({ ...state\n  })); //all Hotels\n\n  const [hotels, setHotels] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleClick = async () => {\n    setLoading(true);\n\n    try {\n      let res = await createConnectAccount(auth.token);\n      console.log(res); // get login link\n\n      window.location.href = res.data;\n    } catch (err) {\n      console.log(err);\n      toast.error('Stripe connect failed, Try again');\n      setLoading(false);\n    }\n  }; //\n\n\n  useEffect(() => {\n    loadSellersHotels();\n  }, []);\n\n  const loadSellersHotels = async () => {\n    let {\n      data\n    } = await sellerHotels(auth.token);\n    setHotels(data);\n  };\n\n  const handleHotelDelete = async hotelId => {\n    if (!window.confirm('Are you sure?')) return;\n    deleteHotel(auth.token, hotelId).then(res => {\n      toast.success('Hotel Deleted');\n      loadSellersHotels();\n    });\n  };\n\n  const [openadd, setOpenadd] = React.useState(false);\n\n  const handleBtnAddHotel = () => {\n    setOpenadd(true);\n  };\n\n  const handleCloseBtnAdd = () => {\n    setOpenadd(false);\n  };\n\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const handleClickOpenEdit = () => {\n    setOpenedit(true);\n  };\n\n  const handleCloseEdit = () => {\n    setOpenedit(false);\n  };\n\n  const connected = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleBtnAddHotel,\n        children: \"Add New Hotel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddHotel, {\n        openadd: openadd,\n        handleCloseBtnAdd: handleCloseBtnAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this); // @ts-ignore\n\n\n  const notconnected = () => /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(HomeOutlinedIcon, {\n          color: \"primary\",\n          style: {\n            fontSize: 50\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Setup payouts to post hotels rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Connect with stripe to transfer earnings to your bank account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClick,\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"medium\",\n            disabled: loading,\n            children: loading ? 'Processing...' : 'Setup Payouts'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: [\"You'll be redirected to Stripe to complete the onboarding process.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [auth && auth.user && auth.user.stripe_seller && auth.user.stripe_seller.charges_enabled && auth.user.stripe_seller.login_links ? connected() : notconnected(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      children: hotels.map(h =>\n      /*#__PURE__*/\n      // @ts-ignore\n      _jsxDEV(HotelCard, {\n        h: h,\n        handleHotelDelete: handleHotelDelete,\n        handleClickOpenEdit: handleClickOpenEdit,\n        handleCloseEdit: handleCloseEdit,\n        openedit: openedit\n      }, h._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HotelsList, \"1lIafLwKvIw38YBNgP+1TGuUpTo=\", false, function () {\n  return [useSelector];\n});\n\n_c = HotelsList;\nexport default HotelsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"HotelsList\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/booking2/client/src/components/hotels/HotelsList.js"],"names":["Button","Card","CardActions","CardContent","Grid","Typography","React","useEffect","useState","AddHotel","HotelCard","deleteHotel","sellerHotels","useSelector","HomeOutlinedIcon","createConnectAccount","toast","HotelsList","params","auth","state","hotels","setHotels","loading","setLoading","handleClick","res","token","console","log","window","location","href","data","err","error","loadSellersHotels","handleHotelDelete","hotelId","confirm","then","success","openadd","setOpenadd","handleBtnAddHotel","handleCloseBtnAdd","openedit","setOpenedit","handleClickOpenEdit","handleCloseEdit","connected","notconnected","fontSize","user","stripe_seller","charges_enabled","login_links","map","h","_id"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport AddHotel from './addhotel';\r\nimport HotelCard from './HotelCard';\r\nimport './style.css';\r\nimport { deleteHotel, sellerHotels } from '../../redux/actions/hotel';\r\nimport { useSelector } from 'react-redux';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport { createConnectAccount } from '../actions/stripe';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst HotelsList = ({ params }) => {\r\n  //\r\n\r\n  // @ts-ignore\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  //all Hotels\r\n  const [hotels, setHotels] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClick = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await createConnectAccount(auth.token);\r\n      console.log(res); // get login link\r\n      window.location.href = res.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error('Stripe connect failed, Try again');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //\r\n  useEffect(() => {\r\n    loadSellersHotels();\r\n  }, []);\r\n\r\n  const loadSellersHotels = async () => {\r\n    let { data } = await sellerHotels(auth.token);\r\n    setHotels(data);\r\n  };\r\n\r\n  const handleHotelDelete = async (hotelId) => {\r\n    if (!window.confirm('Are you sure?')) return;\r\n    deleteHotel(auth.token, hotelId).then((res) => {\r\n      toast.success('Hotel Deleted');\r\n      loadSellersHotels();\r\n    });\r\n  };\r\n  const [openadd, setOpenadd] = React.useState(false);\r\n\r\n  const handleBtnAddHotel = () => {\r\n    setOpenadd(true);\r\n  };\r\n\r\n  const handleCloseBtnAdd = () => {\r\n    setOpenadd(false);\r\n  };\r\n\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n\r\n  const handleClickOpenEdit = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenedit(false);\r\n  };\r\n\r\n  const connected = () => (\r\n    <div>\r\n      <Grid container justifyContent=\"center\">\r\n        <Button variant=\"contained\" onClick={handleBtnAddHotel}>\r\n          Add New Hotel\r\n        </Button>\r\n        <AddHotel openadd={openadd} handleCloseBtnAdd={handleCloseBtnAdd} />\r\n      </Grid>\r\n      {/* {JSON.stringify(hotels)} */}\r\n    </div>\r\n  );\r\n\r\n  // @ts-ignore\r\n  const notconnected = () => (\r\n    <Grid container justifyContent=\"center\">\r\n      {/* <Button variant=\"contained\" disabled>\r\n        Disabled\r\n      </Button> */}\r\n      {/* <br /> */}\r\n      <Card>\r\n        <CardContent>\r\n          <HomeOutlinedIcon color=\"primary\" style={{ fontSize: 50 }} />\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Setup payouts to post hotels rooms\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            Connect with stripe to transfer earnings to your bank account\r\n          </Typography>\r\n\r\n          <CardActions>\r\n            <Button\r\n              onClick={handleClick}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Processing...' : 'Setup Payouts'}\r\n            </Button>\r\n          </CardActions>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            You'll be redirected to Stripe to complete the onboarding process.\r\n            <br />\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(auth,null ,4)}</pre> */}\r\n      {auth &&\r\n      auth.user &&\r\n      auth.user.stripe_seller &&\r\n      auth.user.stripe_seller.charges_enabled&&\r\n      auth.user.stripe_seller.login_links\r\n        ? connected()\r\n        : notconnected()}\r\n      <br />\r\n      <Grid container justifyContent=\"center\">\r\n        {/* <pre>{JSON.stringify(hotels, null, 4)}</pre> */}\r\n        {hotels.map((h) => (\r\n          // @ts-ignore\r\n          <HotelCard\r\n            h={h}\r\n            key={h._id}\r\n            handleHotelDelete={handleHotelDelete}\r\n            handleClickOpenEdit={handleClickOpenEdit}\r\n            handleCloseEdit={handleCloseEdit}\r\n            openedit={openedit}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotelsList;\r\n"]},"metadata":{},"sourceType":"module"}