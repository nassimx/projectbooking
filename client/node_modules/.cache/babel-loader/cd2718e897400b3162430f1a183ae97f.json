{"ast":null,"code":"var _jsxFileName = \"/Users/nassim/Desktop/projectbooking/client/src/components/User/Stripe/connectNav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { currencyFormatter, getAccountBalance } from '../../actions/stripe'; //\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 350,\n    maxWidth: 450\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst ConnectNav = () => {\n  _s();\n\n  const classes = useStyles(); // @ts-ignore\n\n  const {\n    auth\n  } = useSelector(state => ({ ...state\n  }));\n  const {\n    user\n  } = auth;\n  const [balance, setBalance] = useState(0);\n  useEffect(() => {\n    getAccountBalance(auth.token).then(res => {\n      // console.log(res);\n      setBalance(res.data);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Welecom back\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, user.firstname[0]) //   action={\n    //     <IconButton aria-label=\"settings\">\n    //       <MoreVertIcon />\n    //     </IconButton>\n    //   }\n    ,\n    title: user.firstname,\n    subheader: `joined ${moment(user.createdAt).fromNow()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))), auth && auth.user && auth.user.stripe_seller && auth.user.stripe_seller.charges_enabled && auth.user.stripe_seller.login_links && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Pending balace\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, balance && balance.pending && balance.pending.map((pb, i) => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }, currencyFormatter(pb))))), /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Payout settings\")), /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }))))));\n};\n\n_s(ConnectNav, \"bRimSoAtNusyyb2fJB3ZgZid/5s=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = ConnectNav;\nexport default ConnectNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectNav\");","map":{"version":3,"sources":["/Users/nassim/Desktop/projectbooking/client/src/components/User/Stripe/connectNav.js"],"names":["React","useEffect","useState","makeStyles","Card","CardHeader","CardContent","CardActions","Avatar","Typography","red","moment","useSelector","Grid","currencyFormatter","getAccountBalance","useStyles","theme","root","minWidth","maxWidth","avatar","backgroundColor","ConnectNav","classes","auth","state","user","balance","setBalance","token","then","res","data","firstname","createdAt","fromNow","stripe_seller","charges_enabled","login_links","pending","map","pb","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { currencyFormatter, getAccountBalance } from '../../actions/stripe';\n//\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 350,\n    maxWidth: 450,\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\nconst ConnectNav = () => {\n  const classes = useStyles();\n\n  // @ts-ignore\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { user } = auth;\n  const [balance, setBalance] = useState(0);\n\n  useEffect(() => {\n    getAccountBalance(auth.token).then((res) => {\n      // console.log(res);\n      setBalance(res.data);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div>\n      <h1>Welecom back</h1>\n      <br />\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={4}\n      >\n        <Grid item xs={12} sm={6} md={4}>\n          <Card className={classes.root}>\n            <CardHeader\n              avatar={\n                <Avatar className={classes.avatar}>{user.firstname[0]}</Avatar>\n              }\n              //   action={\n              //     <IconButton aria-label=\"settings\">\n              //       <MoreVertIcon />\n              //     </IconButton>\n              //   }\n              title={user.firstname}\n              subheader={`joined ${moment(user.createdAt).fromNow()}`}\n            />\n            {/* <CardContent>\n              <Typography variant=\"h5\" component=\"p\">\n                This impressive\n              </Typography>\n            </CardContent> */}\n            <CardActions disableSpacing>{/* hhhh */}</CardActions>\n          </Card>\n        </Grid>\n\n        {auth &&\n          auth.user &&\n          auth.user.stripe_seller &&\n          auth.user.stripe_seller.charges_enabled &&\n          auth.user.stripe_seller.login_links && (\n            <>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.root}>\n                  <CardContent>\n                    <Typography variant=\"h6\" component=\"p\">\n                      Pending balace\n                    </Typography>\n                    <br />\n                    <Typography variant=\"h4\">\n                      {balance &&\n                        balance.pending &&\n                        balance.pending.map((pb, i) => (\n                          <span>{currencyFormatter(pb)}</span>\n                        ))}\n                    </Typography>\n                  </CardContent>\n                  <CardActions disableSpacing>{/* hhhh */}</CardActions>\n                </Card>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.root}>\n                  <CardContent>\n                    <Typography variant=\"h6\" component=\"p\">\n                      Payout settings\n                    </Typography>\n                  </CardContent>\n                  <CardActions disableSpacing>{/* hhhh */}</CardActions>\n                </Card>\n              </Grid>\n            </>\n          )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ConnectNav;\n"]},"metadata":{},"sourceType":"module"}