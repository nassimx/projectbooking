{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\booking2\\\\client\\\\src\\\\components\\\\User\\\\Stripe\\\\connectNav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { currencyFormatter, getAccountBalance } from '../../actions/stripe'; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 350,\n    maxWidth: 450\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst ConnectNav = () => {\n  _s();\n\n  const classes = useStyles(); // @ts-ignore\n\n  const {\n    auth\n  } = useSelector(state => ({ ...state\n  }));\n  const {\n    user\n  } = auth;\n  const [balance, setBalance] = useState(0);\n  useEffect(() => {\n    getAccountBalance(auth.token).then(res => {\n      // console.log(res);\n      setBalance(res.data);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welecom back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.avatar,\n              children: user.firstname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this) //   action={\n            //     <IconButton aria-label=\"settings\">\n            //       <MoreVertIcon />\n            //     </IconButton>\n            //   }\n            ,\n            title: user.firstname,\n            subheader: `joined ${moment(user.createdAt).fromNow()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            disableSpacing: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), auth && auth.user && auth.user.stripe_seller && auth.user.stripe_seller.details_submitted && auth.user.stripe_seller.login_links && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"p\",\n                children: \"Pending balace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: balance && balance.pending && balance.pending.map((pb, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: currencyFormatter(pb)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              disableSpacing: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"p\",\n                children: \"Payout settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              disableSpacing: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectNav, \"bRimSoAtNusyyb2fJB3ZgZid/5s=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = ConnectNav;\nexport default ConnectNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectNav\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/booking2/client/src/components/User/Stripe/connectNav.js"],"names":["React","useEffect","useState","makeStyles","Card","CardHeader","CardContent","CardActions","Avatar","Typography","red","moment","useSelector","Grid","currencyFormatter","getAccountBalance","useStyles","theme","root","minWidth","maxWidth","avatar","backgroundColor","ConnectNav","classes","auth","state","user","balance","setBalance","token","then","res","data","firstname","createdAt","fromNow","stripe_seller","details_submitted","login_links","pending","map","pb","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid } from '@material-ui/core';\r\nimport { currencyFormatter, getAccountBalance } from '../../actions/stripe';\r\n//\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 350,\r\n    maxWidth: 450,\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\nconst ConnectNav = () => {\r\n  const classes = useStyles();\r\n\r\n  // @ts-ignore\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const { user } = auth;\r\n  const [balance, setBalance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getAccountBalance(auth.token).then((res) => {\r\n      // console.log(res);\r\n      setBalance(res.data);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1>Welecom back</h1>\r\n      <br />\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        spacing={4}\r\n      >\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card className={classes.root}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar className={classes.avatar}>{user.firstname[0]}</Avatar>\r\n              }\r\n              //   action={\r\n              //     <IconButton aria-label=\"settings\">\r\n              //       <MoreVertIcon />\r\n              //     </IconButton>\r\n              //   }\r\n              title={user.firstname}\r\n              subheader={`joined ${moment(user.createdAt).fromNow()}`}\r\n            />\r\n            {/* <CardContent>\r\n              <Typography variant=\"h5\" component=\"p\">\r\n                This impressive\r\n              </Typography>\r\n            </CardContent> */}\r\n            <CardActions disableSpacing>{/* hhhh */}</CardActions>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {auth &&\r\n          auth.user &&\r\n          auth.user.stripe_seller &&\r\n          auth.user.stripe_seller.details_submitted &&\r\n          auth.user.stripe_seller.login_links && (\r\n            <>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Card className={classes.root}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                      Pending balace\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"h4\">\r\n                      {balance &&\r\n                        balance.pending &&\r\n                        balance.pending.map((pb, i) => (\r\n                          <span>{currencyFormatter(pb)}</span>\r\n                        ))}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions disableSpacing>{/* hhhh */}</CardActions>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Card className={classes.root}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                      Payout settings\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions disableSpacing>{/* hhhh */}</CardActions>\r\n                </Card>\r\n              </Grid>\r\n            </>\r\n          )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectNav;\r\n"]},"metadata":{},"sourceType":"module"}