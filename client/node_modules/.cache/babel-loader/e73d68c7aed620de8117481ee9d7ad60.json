{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\booking2\\\\client\\\\src\\\\components\\\\forms\\\\CreateHotelForm.js\";\nimport React from 'react';\nimport { Container, Grid, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport NumberFormat from 'react-number-format';\nimport AlgoliaPlaces from 'algolia-places-react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'; //\n//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  appId: process.env.ALGOLIA_APP_ID,\n  apiKey: process.env.ALGOLIA_API_KEY,\n  language: 'en',\n  countries: ['tn']\n};\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumberFormat, { ...other,\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    isNumericString: true,\n    prefix: \"$\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NumberFormatCustom;\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}; // @ts-ignore ///\n\nexport default function HotelCreateForm(props) {\n  const {\n    handleChange,\n    handleImageChange,\n    setLocation,\n    setValues,\n    values\n  } = props;\n  const {\n    title,\n    content,\n    price,\n    bed,\n    from,\n    to\n  } = values;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            xs: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Title\",\n              name: \"title\",\n              onChange: handleChange,\n              inputProps: {\n                maxLength: 45\n              },\n              required: true,\n              value: title,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            xs: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"file\",\n              accept: \"image/*\",\n              name: \"image\",\n              onChange: handleImageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            xs: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Content\",\n              name: \"content\",\n              value: content,\n              onChange: handleChange,\n              multiline: true,\n              rows: 5,\n              variant: \"outlined\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlgoliaPlaces, {\n            placeholder: Location,\n            defaultValue: Location,\n            options: config,\n            onChange: ({\n              suggestion\n            }) => setLocation(suggestion.value),\n            style: {\n              height: '50px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            xs: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Price\",\n              value: price,\n              onChange: handleChange,\n              name: \"price\",\n              id: \"formatted-numberformat-input\",\n              variant: \"outlined\",\n              required: true,\n              InputProps: {\n                inputComponent: NumberFormatCustom\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            xs: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Bed\",\n              name: \"bed\",\n              type: \"number\",\n              onChange: handleChange,\n              required: true,\n              value: bed,\n              InputProps: {\n                inputProps: {\n                  min: 0,\n                  max: 4\n                }\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-around\",\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                variant: \"inline\",\n                format: \"MM/dd/yyyy\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                helperText: \"From date\",\n                minDate: new Date(),\n                value: from,\n                onChange: date => setValues({ ...values,\n                  from: date\n                }),\n                KeyboardButtonProps: {\n                  'aria-label': 'change date'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-around\",\n            children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              disableToolbar: true,\n              variant: \"inline\",\n              format: \"MM/dd/yyyy\",\n              margin: \"normal\",\n              id: \"date-picker-inline\",\n              helperText: \"To date\",\n              minDate: new Date(),\n              value: to,\n              onChange: date => setValues({ ...values,\n                to: date\n              }),\n              KeyboardButtonProps: {\n                'aria-label': 'change date'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c2 = HotelCreateForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NumberFormatCustom\");\n$RefreshReg$(_c2, \"HotelCreateForm\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/booking2/client/src/components/forms/CreateHotelForm.js"],"names":["React","Container","Grid","TextField","PropTypes","NumberFormat","AlgoliaPlaces","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","config","appId","process","env","ALGOLIA_APP_ID","apiKey","ALGOLIA_API_KEY","language","countries","NumberFormatCustom","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","string","HotelCreateForm","handleChange","handleImageChange","setLocation","setValues","title","content","price","bed","from","to","maxLength","Location","suggestion","height","inputComponent","inputProps","min","max","Date","date"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container, Grid, TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport AlgoliaPlaces from 'algolia-places-react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n//\r\n//\r\nconst config = {\r\n  appId: process.env.ALGOLIA_APP_ID,\r\n  apiKey: process.env.ALGOLIA_API_KEY,\r\n  language: 'en',\r\n  countries: ['tn'],\r\n};\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n// @ts-ignore ///\r\nexport default function HotelCreateForm(props) {\r\n  const { handleChange, handleImageChange, setLocation, setValues, values } =\r\n    props;\r\n  const { title, content, price, bed, from, to } = values;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <br />\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={2}>\r\n            <Grid item md={6} xs={12} lg={4}>\r\n              <TextField\r\n                label=\"Title\"\r\n                name=\"title\"\r\n                onChange={handleChange}\r\n                inputProps={{ maxLength: 45 }}\r\n                required\r\n                value={title}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item md={6} xs={12} lg={4}>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                onChange={handleImageChange}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} xs={12} lg={4}>\r\n              <TextField\r\n                label=\"Content\"\r\n                name=\"content\"\r\n                value={content}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <AlgoliaPlaces\r\n              placeholder={Location}\r\n              defaultValue={Location}\r\n              options={config}\r\n              onChange={({ suggestion }) => setLocation(suggestion.value)}\r\n              style={{ height: '50px' }}\r\n            />\r\n            <Grid item md={6} xs={12} lg={4}>\r\n              <TextField\r\n                label=\"Price\"\r\n                value={price}\r\n                onChange={handleChange}\r\n                name=\"price\"\r\n                id=\"formatted-numberformat-input\"\r\n                variant=\"outlined\"\r\n                required\r\n                InputProps={{\r\n                  inputComponent: NumberFormatCustom,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} xs={12} lg={4}>\r\n              <TextField\r\n                label=\"Bed\"\r\n                name=\"bed\"\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                required\r\n                value={bed}\r\n                InputProps={{ inputProps: { min: 0, max: 4 } }}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justifyContent=\"space-around\">\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  helperText=\"From date\"\r\n                  minDate={new Date()}\r\n                  value={from}\r\n                  onChange={(date) => setValues({ ...values, from: date })}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justifyContent=\"space-around\">\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                helperText=\"To date\"\r\n                minDate={new Date()}\r\n                value={to}\r\n                onChange={(date) => setValues({ ...values, to: date })}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}